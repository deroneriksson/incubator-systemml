<h1>$title</h1>

#if ($message)
<div>$message</div>
#end

#if ($script.exists)

<h3>Name:</h3>
#if ($script.name)
<div style="font-weight: bold; padding-left: 2em; font-style: italic;">
$script.name
</div>
#else
<div style="padding-left: 2em; font-style: italic;">
None
</div>
#end

<h3>Parse Tree:</h3>

<div id="parse-tree-container"></div>

<style>
.parse-tree-svg {
  background-color: #EFFFEF;
  width: 100%;
  border: 1px solid #e0e0e0;
}
.edge {
  stroke: #999;
  stroke-width: 2px;
  fill: none;
}
.branch circle, .leaf circle {
  stroke: #AAA;
  stroke-width: 2px;
  fill: #FFF;
}

.branch text, .leaf text {
  font: 12px sans-serif;
}

.branch text {
  font-weight: bold;
  text-shadow: 1px 1px #fff;
}
</style>
<script>
var treeData =
$script.parseTreeD3
;

//var w = $("\#parse-tree-container").width();
var w = $script.parseTreeWidth ;
var h = $script.parseTreeHeight ;
var margin = {top:20, right:50, bottom:20, left:100};
var parseTreeSvg = d3.select("\#parse-tree-container")
                     .append("svg")
                     .attr("width", w)
                     .attr("height", h)
                     .attr("class", "parse-tree-svg")
                     .call(d3.zoom().scaleExtent([.1, 10]).on("zoom", function(){ d3.select("svg").attr("transform", "translate(" + d3.zoomTransform(this).x + "," + d3.zoomTransform(this).y + ") scale(" + d3.zoomTransform(this).k + ")"); }));
var parseTreeGroup = parseTreeSvg.append("g")
                                 .attr("transform", "translate(" + margin.left + ", " + margin.top + ")");
//console.log("w:" + w);
//console.log("h:" + h);
var parseTree = d3.tree().size([h - margin.top - margin.bottom, w - margin.left - margin.right]);
var parseTreeNodes = d3.hierarchy(treeData, function(d) { return d.children; });
parseTreeNodes = parseTree(parseTreeNodes);

var edgeLine = function(node) {
  var x = node.x, y = node.y, px = node.parent.x, py = node.parent.y;
  var moveto = "M" + y + "," + x;
  // curveto when not rotated: Cc1x,c1y c2x,c2y x,y
  var curveto = "C" + (y + py)/2 + "," + x + " " + (y + py)/2 + "," + px + " " + py + "," + px;
  return moveto + " " + curveto;
};

var edges = parseTreeGroup.selectAll(".edge")
                         .data(parseTreeNodes.descendants().slice(1))
                         .enter().append("path")
                         .attr("class", "edge")
                         .attr("d", function(d) { return edgeLine(d); });

var branchOrLeaf = function(node) {
  if (node.children) {
    return "node branch";
  } else {
    return "node leaf";
  }
}

var nodes = parseTreeGroup.selectAll(".node")
                         .data(parseTreeNodes.descendants())
                         .enter().append("g")
                         .attr("transform", function(d) { return "translate(" + d.y + "," + d.x + ")"; })
                         .attr("class", function(d) { return branchOrLeaf(d); });

nodes.append("circle").attr("r", 6);

var textPosition = function(node) {
  if (node.children) {
    return -9;
  } else {
    return 11;
  }
}

var textAnchor = function(node) {
  if (node.children) {
    return "end";
  } else {
    return "start";
  }
}

nodes.append("text")
     .text(function(d) { return d.data.name; })
     .attr("x", function(d) { return textPosition(d); })
     .attr("dy", function(d) { return d.children ? "-3px" : "4px"; })
     .style("text-anchor", function(d) { return textAnchor(d); });

</script>

<h3>Parse Tree D3 Data:</h3>
<pre style="font-size: 12px;">
$script.parseTreeD3
</pre>

#else
No script is active or has been registered.
#end
